{
  "name": "mongoose-json-select",
  "version": "0.2.1",
  "description": "a mongoose plugin to limit json fields",
  "author": {
    "name": "Naoyuki Kanezawa",
    "email": "naoyuki.kanezawa@gmail.com"
  },
  "keywords": [
    "mongoose",
    "json",
    "plugin",
    "mongodb",
    "toJSON",
    "select",
    "limit",
    "filter"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/nkzawa/mongoose-json-select.git"
  },
  "scripts": {
    "test": "node_modules/.bin/mocha --reporter dot"
  },
  "dependencies": {
    "clone": "0.1.9"
  },
  "devDependencies": {
    "mocha": "*",
    "chai": "*",
    "mongoose": "*"
  },
  "readme": "# mongoose-json-select\n[![Build Status](https://travis-ci.org/nkzawa/mongoose-json-select.png?branch=master)](https://travis-ci.org/nkzawa/mongoose-json-select)\n[![NPM version](https://badge.fury.io/js/mongoose-json-select.png)](http://badge.fury.io/js/mongoose-json-select)\n\nA mongoose plugin to limit JSON properties.\n\n```js\nvar jsonSelect = require('mongoose-json-select');\n\nvar schema = Schema({\n  name: String,\n  email: String,\n  created: {type: Date, default: Date.now}\n});\nschema.plugin(jsonSelect, 'name created');\nvar User = mongoose.model('User', schema);\n\nvar user = User({name: 'alice', email: 'alice@example.com'});\nJSON.stringify(user);\n// -> '{\"_id\": \"51466baedf03a52e9b000001\", \"name\": \"alice\", \"created\": \"2013-03-16T16:08:38.065Z\"}'\n\nJSON.stringify(user.toJSON({select: 'name email'}));\n// -> '{\"_id\": \"51466baedf03a52e9b000001\", \"name\": \"alice\", \"email\": \"alice@example.com\"}'\n```\n\n## Installation\n    $ npm install mongoose-json-select\n\n## Usage\nInclusion/Exclusion\n```js\n// inclusion. these are equivalent\nschema.plugin(jsonSelect, 'name.first');\nschema.plugin(jsonSelect, {'name.first': 1});\n\n// exclusion. these are equivalent\nschema.plugin(jsonSelect, '-name.last');\nschema.plugin(jsonSelect, {'name.last': 0});\n```\n\nAlways includes _id field if the field is not excluded explicitly.\n```js\nschema.plugin(jsonSelect, 'name');  // contains 'name' and '_id'\n```\n\nConfigures default fields as a plugin option or schema option.\n```js\n// these are equivalent\nschema.plugin(jsonSelect, 'name');\n\nschema.plugin(jsonSelect);\nschema.set('toJSON', {select: 'name'});\n```\n\nSpecifies fields when calling toJSON.\n```js\n// this overrides a default configuration\nJSON.stringify(doc.toJSON({select: 'name email'}));\n```\n\nThe syntax for fields is the same with mongoose's Query#select.\n\nhttp://mongoosejs.com/docs/api.html#query_Query-select\n\n\n## Documentation\n\n### select(obj, fields)\nCreates a deep clone of 'obj' filtered by 'fields'.\n\n```js\nvar select = require('mongoose-json-select').select;\nselect({a: {b: 'foo'}, c: 'bar'}, 'a.b');\n// -> {a: {b: 'foo'}}\n```\n\n## License\nMIT\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nkzawa/mongoose-json-select/issues"
  },
  "homepage": "https://github.com/nkzawa/mongoose-json-select",
  "_id": "mongoose-json-select@0.2.1",
  "_from": "mongoose-json-select@0.2.1"
}
